should be able to retrieve last element with help of complete examples, parameterized by set
{S1 =i {v} ++ S; ret :-> x ** lseg(x, nxt, S) ** [nxt,2] ** nxt :-> v ** (nxt+1):-> tl }
  void lstElement(loc ret, loc nxt)
{true ; ret :-> v ** lseg(tl,tl, {}) }

###

{S1 =i {v} ++ S /\ x1 == x /\ v1 == v  ; ret :-> x1 ** lseg(x1, nxt, S) ** [nxt,2] ** nxt :-> v1 ** (nxt+1):-> tl }
  void lstElement(loc ret, loc nxt)
{true ; ret :-> v1 ** lseg(tl,tl, {}) }

###
// ret is pointer to hd of SLL
// tl is last node of SLL
void lstElement (loc ret, loc tl) {
  let x = *ret;
  if (x == tl) { // traverse until reach the end
    free(tl);
    *ret = 0;    // at the end, set to concrete value pointed to by tl as placeholder
  } else {
    let n = *x;
    *ret = n;
    lstElement(ret, tl);  // recursively traverse. at x == tl, *ret = 0.
    let z = *ret;         // once we reach the end, have to "backtrack" to recursively pass value to ret variable
    *x = z;               //
    *ret = x;
  }
}