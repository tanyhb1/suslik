should be able to retrieve first element with help of complete examples, parameterized by set
the first element of a SLL
{r -> x sll(x)}
{r -> z sll(y)}
concretely,
{r -> 5 * [5 -> 3 *...] }
returns
{r -> 3 * [5 -> 3 *...] }
{ S1 =i {v} ++ S ;
  [x, 2] ** x :-> v ** (x + 1) :-> nxt ** lseg(nxt, 0, S)}

void list_copy(loc x)

{true ; lseg(x, 0, S1)}
introduce substitution of examples into the pure part?
#######

{S1 =i {v} ++ S /\ x1 == x /\ v1 == v ; ret :-> x1 **  [x1,2] ** x1:-> v1 ** (x1+1) :-> nxt ** lseg(nxt, 0, S)}
void fstelement2(loc ret)
{true ;  ret :-> v1 ** lseg(x1, 0, S1)}

######
// ret points to the head of the SLL, hd points to the second element of the SLL (represented as lsegs)
void fstElement (loc ret, loc y) {
  let x = *ret; //  store value of hd at x
  let h = *x; // store value pointed to by hd
  free(x); // free hd
  *ret = h; // return value pointed to by hd (which is second element)
}